*,:after,:before{box-sizing:border-box;margin:0;padding:0}.wrapper{margin:0 auto;width:100%;max-width:1200px}.button{text-align:center;color:#00d4ff;text-decoration:none;background-color:transparent;border:1px solid #00d4ff;padding:.5em .8em;border-radius:3px;font-weight:700;cursor:pointer;transition:background-color .3s,color .3s}.button:hover{background-color:#00d4ff;color:#fff}.title{font-size:3.5rem}.text{font-size:1.2rem}.hero-gradient{position:relative;max-width:220px;box-shadow:0 0 15px #000;z-index:2}.hero-gradient:before{display:block;position:absolute;content:"";width:100%;height:100%;background-image:linear-gradient(90deg,rgba(0,0,0,.03),#00d4ff)}@media (min-width:375px){.title{font-size:4.5rem}.text{font-size:1.4rem}.button{font-size:1.5rem}.hero-gradient{max-width:300px}}@media (min-width:576px){.title{font-size:6rem}.hero-gradient{margin:-40px 0;max-width:270px;height:500px}}@media (min-width:768px){.title{font-size:7rem}.text{font-size:1.5rem}.hero-gradient{max-width:350px}}@media (min-width:992px){.title{font-size:8rem}.hero-gradient{max-width:400px;height:600px}}@media (min-width:1200px){.title{font-size:9rem}.text{font-size:1.8rem}.button{font-size:2rem}.hero-gradient{margin-right:100px}}html{font-size:62.5%;scroll-behavior:smooth;scroll-padding-top:62.5px}body{font-family:Montserrat,sans-serif}.nav-desktop{display:none}.header{height:100vh;color:#fff;background-image:linear-gradient(90deg,rgba(0,0,0,.03),#00d4ff),url(/src/img/header/header_mini.jpg);background-size:cover;background-position:50%;background-attachment:scroll}.header__box{height:100%}.header__box,.header__main{display:flex;flex-direction:column;justify-content:center;position:relative}.header__main{grid-row:1/2}.header__title{text-align:center;font-weight:700}.header__text{max-width:500px;margin:0 auto;text-align:center;padding-bottom:2em;color:#bebaba}.header__button{background-color:transparent;border:none}.header__btn{position:absolute;bottom:20px;left:50%;transform:translateX(-50%)}.header:before{content:"";position:absolute;width:100%;height:100%;background-color:rgba(0,0,0,.3)}.about-me{display:flex;flex-direction:column}.about-me__left{display:flex;justify-content:center;padding:1em}.about-me__left img{width:100%;height:100%;border-bottom:10px solid #00d4ff;object-fit:cover}.about-me__right{display:flex;flex-direction:column;align-items:center;padding:.5em}.about-me__title{color:#00d4ff}.about-me__text{padding:1em}.articles{position:relative;height:70vh}.articles__carousel{position:relative;width:100%;height:100%}.articles__carousel-item{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;transition:opacity 1s;opacity:0;z-index:0}.articles__carousel-item:before{content:"";position:absolute;width:100%;height:100%;background-color:rgba(0,0,0,.3)}.articles__carousel-item:first-child{opacity:1;z-index:1}.articles__title{color:#fff;z-index:0}.articles__info{padding-bottom:1em;margin:0 auto;text-align:center;max-width:400px;color:#bebaba;z-index:0}.articles__btn{z-index:3}.articles .first{background-image:linear-gradient(90deg,rgba(0,0,0,.03),#00d4ff),url(/src/img/articles/articles_01-small.png)}.articles .first,.articles .second{background-size:cover;background-position:50%;background-attachment:scroll}.articles .second{background-image:linear-gradient(90deg,rgba(0,0,0,.03),#00d4ff),url(/src/img/articles/articles_02-small.png)}.articles .third{background-image:linear-gradient(90deg,rgba(0,0,0,.03),#00d4ff),url(/src/img/articles/articles_03-small.png);background-size:cover;background-position:50%;background-attachment:scroll}.articles__controls{position:absolute;bottom:10px;width:100%;display:flex;justify-content:space-evenly;z-index:3}.articles__square{cursor:pointer;width:40px;height:20px;border:2px solid #00d4ff;border-radius:3px;transition:background-color .8s}.articles .square-active{background-color:#00d4ff}.articles__arrow{display:none}@media (min-width:576px){.nav-desktop{display:flex;justify-content:space-between;width:100%;padding:.5em;position:fixed;background:transparent;font-size:1.6rem;letter-spacing:1px;z-index:3}.nav-desktop a{font-size:1.8rem;color:#fff;text-decoration:none;padding:10px;transition:color .3s;cursor:pointer}.nav-desktop a:hover{color:#00d4ff}.nav-desktop__box{display:flex}.nav-desktop__search-bar{display:flex;justify-content:flex-end;padding:10px}.header{background-image:linear-gradient(90deg,rgba(0,0,0,.03),#00d4ff),url(/src/img/header/header_big.jpg);background-size:cover;background-position:50%;background-attachment:scroll}.header__btn{position:unset}.about-me{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:1fr}.about-me__left{grid-column:1/2;grid-row:1/2}.about-me__right{grid-column:2/3;grid-row:1/2;justify-content:center;align-items:flex-start}.about-me__text{padding:0 0 1em}.about-me__btn{position:unset}.articles .first{background-image:linear-gradient(90deg,rgba(0,0,0,.03),#00d4ff),url(/src/img/articles/articles_01-big.png)}.articles .first,.articles .second{background-size:cover;background-position:50%;background-attachment:scroll}.articles .second{background-image:linear-gradient(90deg,rgba(0,0,0,.03),#00d4ff),url(/src/img/articles/articles_02-big.png)}.articles .third{background-image:linear-gradient(90deg,rgba(0,0,0,.03),#00d4ff),url(/src/img/articles/articles_03-big.png);background-size:cover;background-position:50%;background-attachment:scroll}.articles__controls{justify-content:flex-start}.articles__square{margin:0 20px;width:50px}.articles__arrow{display:block;font-size:4rem;position:absolute;top:50%;transform:translateY(-50%);color:#fff;text-decoration:none;z-index:3;margin:0 20px;cursor:pointer}.articles .right{right:0}}@media (min-width:768px){.nav-desktop{padding:.5em 1em}.articles__square{width:60px}}@media (min-width:992px){.nav-desktop{font-size:2rem;padding:.7em 1em}}@media (min-width:1200px){.nav-desktop a{font-size:2rem}.articles__square{margin:0 30px;width:70px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
